version: "3.9"

services:
  discovery-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    image: discovery-server:local
    container_name: discovery-server
    ports: ["8761:8761"]
    environment:
      PORT: 8761
      SPRING_AUTOCONFIGURE_EXCLUDE: "org.springframework.cloud.config.server.config.ConfigServerAutoConfiguration"
    restart: unless-stopped
    networks: [devnet]
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8761"]
      interval: 10s
      timeout: 5s
      retries: 15

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: careerhub
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [devnet]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d careerhub"]
      interval: 10s
      timeout: 5s
      retries: 15

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: app
      RABBITMQ_DEFAULT_PASS: app
      RABBITMQ_ERLANG_COOKIE: "my-very-secret-cookie"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks: [devnet]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 15

  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    image: gateway:local
    container_name: gateway
    ports: [ "8080:8080" ]
    environment:
      SERVER_PORT: 8080
      SPRING_APPLICATION_NAME: gateway
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
    depends_on:
      - discovery-server
      - backend
    restart: unless-stopped
    networks: [ devnet ]
    healthcheck:
      test: [ "CMD-SHELL", "curl -fsS http://localhost:8080/actuator/health/readiness | grep -q '\"status\":\"UP\"'" ]
      interval: 10s
      timeout: 5s
      retries: 15


  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    image: backend:local
    container_name: backend
    expose: ["8081"]
    environment:
      SERVER_PORT: 8081
      SPRING_APPLICATION_NAME: backend
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
    depends_on:
      discovery-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks: [devnet]
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8081/actuator/health/liveness"]
      interval: 10s
      timeout: 5s
      retries: 15

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: /api
    image: frontend:local
    container_name: frontend
    ports: [ "3000:3000" ]
    depends_on:
      gateway:
        condition: service_healthy
    restart: unless-stopped
    networks: [ devnet ]
    healthcheck:
      test: [ "CMD-SHELL", "curl -fsS http://localhost:3000/ > /dev/null || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 15

networks:
  devnet:
    driver: bridge

volumes:
  pgdata:
  rabbitmq_data:
